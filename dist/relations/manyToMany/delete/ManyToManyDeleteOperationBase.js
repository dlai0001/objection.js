var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var DeleteOperation=require('../../../queryBuilder/operations/DeleteOperation');var ManyToManyDeleteOperationBase=function(_DeleteOperation){_inherits(ManyToManyDeleteOperationBase,_DeleteOperation);function ManyToManyDeleteOperationBase(name,opt){_classCallCheck(this,ManyToManyDeleteOperationBase);var _this=_possibleConstructorReturn(this,(ManyToManyDeleteOperationBase.__proto__||Object.getPrototypeOf(ManyToManyDeleteOperationBase)).call(this,name,opt));_this.relation=opt.relation;_this.owner=opt.owner;return _this;}_createClass(ManyToManyDeleteOperationBase,[{key:'applyModifyFilterForRelatedTable',value:function applyModifyFilterForRelatedTable(builder){throw new Error('not implemented');}},{key:'applyModifyFilterForJoinTable',value:function applyModifyFilterForJoinTable(builder){throw new Error('not implemented');}}]);return ManyToManyDeleteOperationBase;}(DeleteOperation);module.exports=ManyToManyDeleteOperationBase;