var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _get=function get(object,property,receiver){if(object===null)object=Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc===undefined){var parent=Object.getPrototypeOf(object);if(parent===null){return undefined;}else{return get(parent,property,receiver);}}else if("value"in desc){return desc.value;}else{var getter=desc.get;if(getter===undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var ManyToManyModifyMixin=function ManyToManyModifyMixin(Operation){return function(_Operation){_inherits(_class,_Operation);function _class(){var _ref;_classCallCheck(this,_class);for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}var _this=_possibleConstructorReturn(this,(_ref=_class.__proto__||Object.getPrototypeOf(_class)).call.apply(_ref,[this].concat(args)));_this.modifyFilterSubquery=null;return _this;}_createClass(_class,[{key:"onBuild",value:function onBuild(builder){this.modifyFilterSubquery=this.createModifyFilterSubquery(builder);if(this.modifyMainQuery){this.removeFiltersFromMainQuery(builder);this.applyModifyFilterForRelatedTable(builder);}return _get(_class.prototype.__proto__||Object.getPrototypeOf(_class.prototype),"onBuild",this).call(this,builder);}},{key:"createModifyFilterSubquery",value:function createModifyFilterSubquery(builder){var relatedModelClass=this.relation.relatedModelClass;var builderClass=builder.constructor;var ownerProp=this.relation.ownerProp;var ownerIds=[ownerProp.getProps(this.owner)];var modifyFilterSubquery=relatedModelClass.query().childQueryOf(builder);this.relation.findQuery(modifyFilterSubquery,{ownerIds:ownerIds});modifyFilterSubquery.copyFrom(builder,builderClass.WhereSelector).copyFrom(builder,builderClass.JoinSelector);return modifyFilterSubquery;}},{key:"removeFiltersFromMainQuery",value:function removeFiltersFromMainQuery(builder){var builderClass=builder.constructor;builder.clear(builderClass.WhereSelector);builder.clear(builderClass.JoinSelector);}},{key:"applyModifyFilterForRelatedTable",value:function applyModifyFilterForRelatedTable(builder){var idRefs=this.relation.relatedModelClass.getIdRelationProperty().refs(builder);var subquery=this.modifyFilterSubquery.clone().select(idRefs);return builder.whereInComposite(idRefs,subquery);}},{key:"applyModifyFilterForJoinTable",value:function applyModifyFilterForJoinTable(builder){var joinTableOwnerRefs=this.relation.joinTableOwnerProp.refs(builder);var joinTableRelatedRefs=this.relation.joinTableRelatedProp.refs(builder);var relatedRefs=this.relation.relatedProp.refs(builder);var ownerIds=this.relation.ownerProp.getProps(this.owner);var subquery=this.modifyFilterSubquery.clone().select(relatedRefs);return builder.whereInComposite(joinTableRelatedRefs,subquery).whereComposite(joinTableOwnerRefs,ownerIds);}},{key:"modifyMainQuery",get:function get(){return true;}}]);return _class;}(Operation);};module.exports=ManyToManyModifyMixin;