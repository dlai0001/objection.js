var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var ManyToManyModifyMixin=require('./ManyToManyModifyMixin');var SQLITE_BUILTIN_ROW_ID='_rowid_';var ManyToManySqliteModifyMixin=function ManyToManySqliteModifyMixin(Operation){return function(_ManyToManyModifyMixi){_inherits(_class,_ManyToManyModifyMixi);function _class(){_classCallCheck(this,_class);return _possibleConstructorReturn(this,(_class.__proto__||Object.getPrototypeOf(_class)).apply(this,arguments));}_createClass(_class,[{key:'applyModifyFilterForRelatedTable',value:function applyModifyFilterForRelatedTable(builder){var tableRef=builder.tableRefFor(this.relation.relatedModelClass.getTableName());var rowIdRef=tableRef+'.'+SQLITE_BUILTIN_ROW_ID;var subquery=this.modifyFilterSubquery.clone().select(rowIdRef);return builder.whereInComposite(rowIdRef,subquery);}},{key:'applyModifyFilterForJoinTable',value:function applyModifyFilterForJoinTable(builder){var joinTableOwnerRefs=this.relation.joinTableOwnerProp.refs(builder);var tableRef=builder.tableRefFor(this.relation.getJoinModelClass(builder).getTableName());var rowIdRef=tableRef+'.'+SQLITE_BUILTIN_ROW_ID;var ownerIds=this.relation.ownerProp.getProps(this.owner);var subquery=this.modifyFilterSubquery.clone().select(rowIdRef);return builder.whereInComposite(rowIdRef,subquery).whereComposite(joinTableOwnerRefs,ownerIds);}}]);return _class;}(ManyToManyModifyMixin(Operation));};module.exports=ManyToManySqliteModifyMixin;