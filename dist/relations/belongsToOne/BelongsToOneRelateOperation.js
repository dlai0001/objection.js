var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var normalizeIds=require('../../utils/normalizeIds');var RelateOperation=require('../../queryBuilder/operations/RelateOperation');var BelongsToOneRelateOperation=function(_RelateOperation){_inherits(BelongsToOneRelateOperation,_RelateOperation);function BelongsToOneRelateOperation(){_classCallCheck(this,BelongsToOneRelateOperation);return _possibleConstructorReturn(this,(BelongsToOneRelateOperation.__proto__||Object.getPrototypeOf(BelongsToOneRelateOperation)).apply(this,arguments));}_createClass(BelongsToOneRelateOperation,[{key:'onAdd',value:function onAdd(builder,args){this.input=args[0];this.ids=normalizeIds(args[0],this.relation.relatedProp,{arrayOutput:true});if(this.ids.length>1){throw this.relation.createError('can only relate one model to a BelongsToOneRelation');}return true;}},{key:'queryExecutor',value:function queryExecutor(builder){var patch={};var ownerProp=this.relation.ownerProp;var idColumn=builder.fullIdColumnFor(this.relation.ownerModelClass);for(var i=0,l=ownerProp.size;i<l;++i){var relatedValue=this.ids[0][i];ownerProp.setProp(this.owner,i,relatedValue);ownerProp.patch(patch,i,relatedValue);}return this.relation.ownerModelClass.query().childQueryOf(builder).copyFrom(builder,builder.constructor.WhereSelector).patch(patch).whereComposite(idColumn,this.owner.$id());}}]);return BelongsToOneRelateOperation;}(RelateOperation);module.exports=BelongsToOneRelateOperation;