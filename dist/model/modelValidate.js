var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var clone=require('./modelClone').clone;function validate(model,json){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};json=json||model;var inputJson=json;var validatingModelInstance=inputJson&&inputJson.$isObjectionModel;if(options.skipValidation){return json;}if(validatingModelInstance){json=clone(json,true,true);options=_extends({},options,{mutable:true});}var modelClass=model.constructor;var validator=modelClass.getValidator();var args={options:options,model:model,json:json,ctx:Object.create(null)};validator.beforeValidate(args);json=validator.validate(args);validator.afterValidate(args);if(validatingModelInstance){return inputJson.$set(json);}else{return json;}}module.exports={validate:validate};