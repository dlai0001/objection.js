var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var DelegateOperation=require('./DelegateOperation');var UpsertGraphOperation=require('./UpsertGraphOperation');var _require=require('../RelationExpression'),RelationExpression=_require.RelationExpression;var UpsertGraphAndFetchOperation=function(_DelegateOperation){_inherits(UpsertGraphAndFetchOperation,_DelegateOperation);function UpsertGraphAndFetchOperation(name,opt){_classCallCheck(this,UpsertGraphAndFetchOperation);var _this=_possibleConstructorReturn(this,(UpsertGraphAndFetchOperation.__proto__||Object.getPrototypeOf(UpsertGraphAndFetchOperation)).call(this,name,opt));if(!_this.delegate.is(UpsertGraphOperation)){throw new Error('Invalid delegate');}return _this;}_createClass(UpsertGraphAndFetchOperation,[{key:'onAfter3',value:function onAfter3(builder){var _this2=this;var eager=RelationExpression.fromModelGraph(this.models);var modelClass=this.models[0].constructor;var ids=new Array(this.models.length);for(var i=0,l=this.models.length;i<l;++i){ids[i]=this.models[i].$id();}return modelClass.query().childQueryOf(builder).whereIn(builder.fullIdColumnFor(modelClass),ids).eager(eager).then(function(models){return _this2.isArray?models:models[0]||null;});}},{key:'models',get:function get(){return this.delegate.models;}},{key:'isArray',get:function get(){return this.delegate.isArray;}}]);return UpsertGraphAndFetchOperation;}(DelegateOperation);module.exports=UpsertGraphAndFetchOperation;